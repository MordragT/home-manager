diff --git a/invokeai/app/invocations/__init__.py b/invokeai/app/invocations/__init__.py
index cb1caa167..d4c8dcd9d 100644
--- a/invokeai/app/invocations/__init__.py
+++ b/invokeai/app/invocations/__init__.py
@@ -1,4 +1,4 @@
-import shutil
+import subprocess
 import sys
 from importlib.util import module_from_spec, spec_from_file_location
 from pathlib import Path
@@ -12,8 +12,8 @@ custom_nodes_init_path = str(custom_nodes_path / "__init__.py")
 custom_nodes_readme_path = str(custom_nodes_path / "README.md")
 
 # copy our custom nodes __init__.py to the custom nodes directory
-shutil.copy(Path(__file__).parent / "custom_nodes/init.py", custom_nodes_init_path)
-shutil.copy(Path(__file__).parent / "custom_nodes/README.md", custom_nodes_readme_path)
+subprocess.call('cp --no-preserve=mode {src} {dest}'.format(src=Path(__file__).parent / 'custom_nodes/init.py', dest=custom_nodes_init_path), shell=True)
+subprocess.call('cp --no-preserve=mode {src} {dest}'.format(src=Path(__file__).parent / 'custom_nodes/README.md', dest=custom_nodes_readme_path), shell=True)
 
 # Import custom nodes, see https://docs.python.org/3/library/importlib.html#importing-programmatically
 spec = spec_from_file_location("custom_nodes", custom_nodes_init_path)
diff --git a/invokeai/app/services/config/config_default.py b/invokeai/app/services/config/config_default.py
index 1dc75add1..282fee085 100644
--- a/invokeai/app/services/config/config_default.py
+++ b/invokeai/app/services/config/config_default.py
@@ -7,6 +7,7 @@ import locale
 import os
 import re
 import shutil
+import subprocess
 from functools import lru_cache
 from pathlib import Path
 from typing import Any, Literal, Optional
@@ -509,7 +510,7 @@ def get_config() -> InvokeAIAppConfig:
 
     # Copy all legacy configs - We know `__path__[0]` is correct here
     configs_src = Path(model_configs.__path__[0])  # pyright: ignore [reportUnknownMemberType, reportUnknownArgumentType, reportAttributeAccessIssue]
-    shutil.copytree(configs_src, config.legacy_conf_path, dirs_exist_ok=True)
+    subprocess.call('cp -r -n --no-preserve=mode {src}/* {dest}'.format(src=configs_src, dest=config.legacy_conf_path), shell=True)
 
     if config.config_file_path.exists():
         config_from_file = load_and_migrate_config(config.config_file_path)
