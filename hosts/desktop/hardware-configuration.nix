# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ehci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" "sr_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = [
    "kvm-amd"
    "btintel"
    "v4l2loopback"
    # "amd_pstate=active" _CPC object not present and no settings in bios
  ];
  boot.kernelParams = [
    # "i915.force_probe=!56a1"
    # "xe.force_probe=56a1"
    # https://wiki.archlinux.org/title/Gaming#Improve_clock_gettime_throughput
    # already default ?
    # "tsc=reliable"
    # "clocksource=tsc"
    "retbleed=off"
  ];
  boot.extraModulePackages = with config.boot.kernelPackages; [
    v4l2loopback
  ];

  boot.kernel.sysctl = {
    # According to https://wiki.archlinux.org/title/Zram#Optimizing_swap_on_zram
    # these values are best of zram swap
    "vm.swappiness" = 180;
    "vm.watermark_boost_factor" = 0;
    "vm.watermark_scale_factor" = 125;
    "vm.page-cluster" = 0;

    # Increased to not run out of mmaps for certain games, by default 1024 * 1024
    # https://wiki.archlinux.org/title/Gaming#Increase_vm.max_map_count
    "vm.max_map_count" = 8 * 1024 * 1024;
    # https://wiki.archlinux.org/title/Gaming#Tweaking_kernel_parameters_for_response_time_consistency
    # Avoid stalls on memory allocations
    "vm.min_free_kbytes" = 128 * 1024; # default of 66 * 1024
  };

  fileSystems."/" = {
    device = "/dev/disk/by-label/Nixos";
    fsType = "btrfs";
    options = [
      "noatime"
      "compress=zstd"
    ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-label/BOOT";
    fsType = "vfat";
  };

  fileSystems."/home" = {
    device = "none";
    neededForBoot = true;
    fsType = "tmpfs";
    options = ["defaults" "size=50%" "mode=755"];
  };

  fileSystems."/run/media/Media" = {
    device = "/dev/disk/by-label/Media";
    fsType = "btrfs";
    options = [
      "noatime"
      "compress=zstd"
      "autodefrag"
    ];
  };

  swapDevices = [
    {
      device = "/dev/disk/by-label/Swap";
    }
  ];

  # according to this https://github.com/systemd/systemd/issues/16708
  # systemd will skip zram swaps when hibernating, so as long as i keep
  # a traditional swap I should be gucci
  zramSwap = {
    enable = true;
    writebackDevice = "/dev/disk/by-label/SwapWriteback";
  };
}
